name: "Continuous Integration - Pull Request"
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - 'kustomize/**'

jobs:
  tests:
    runs-on: [self-hosted]

    env:
      POSTGRES_PASSWORD: admin123
      MLOPS_DB_USER: mlops_user
      MLOPS_DB_NAME: mlops_db
      MLOPS_DB_PASS: admin123
      MLOPS_DB_HOST: localhost

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U $MLOPS_DB_USER; do
            echo "Waiting for DB to come online..."
            sleep 1
          done

      - name: Install psql
        run: sudo apt-get update && sudo apt-get install -y postgresql-client-15

      - name: Run init script for DB
        run: |
          bash init-db.sh

      - name: Run migrations
        run: python ml_server/manage.py migrate

      - name: Run tests
        run: python ml_server/manage.py test

      - name: train model
        run: python3 train.py model_pipeline_test.joblib


  deployment-tests:
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Build + Deploy PR images to GKE
      timeout-minutes: 20
      run: |
        VERSION="pr${PR_NUMBER}"
        echo "::set-env name=VERSION::$VERSION"

        gcloud auth configure-docker $GOOGLE_ARTIFACTS_REG
        gcloud container clusters get-credentials $PR_CLUSTER --region $REGION --project $PROJECT_ID

        echo Building and release images
        bash run.sh build

        echo Deploying Model
        bash run.sh run
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        PR_NUMBER: ${{ github.event.pull_request.number }}
        NAMESPACE: ${GITHUB_REF##*/}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        PR_CLUSTER: ${{ secrets.PR_CLUSTER }}
        REGION: ${{ secrets.REGION }}
        GOOGLE_ARTIFACTS_REG: ${{ secrets.GOOGLE_ARTIFACTS_REG }}
        RUN_MODE: prod


    - name: Wait For Pods
      timeout-minutes: 20
      run: |
        set -x
        kubectl config set-context --current --namespace=$NAMESPACE
        kubectl wait --for=condition=available --timeout=300s deployment/backend
        kubectl wait --for=condition=available --timeout=100s deployment/nginx
        kubectl wait --for=condition=available --timeout=100s deployment/grafana
        kubectl wait --for=condition=available --timeout=100s deployment/prometheus
        kubectl wait --for=condition=available --timeout=100s statefulset/postgres
